typescript-package:
  description: A ready-to-go TypeScript package template with building, testing, linting, and formatting already setup.
  setup:
    placeholder: package-name
    files:
      - README.md
      - package.json
  sections:
    building: |-
      Uses [unbuild](https://github.com/unjs/unbuild), which utilizes [rollup](https://rollupjs.org/) and [esbuild](https://github.com/evanw/esbuild) under the hood. Not the fastest option, but the only one so far that works out-of-the-box and is easy to configure.
    testing: |-
      Uses [Vitest](https://vitest.dev/).
    linting: |-
      Uses [ESLint](https://eslint.org/) with [typescript-eslint](https://typescript-eslint.io/), [`eslint-config-prettier`](https://github.com/prettier/eslint-config-prettier) to disable conflicting eslint style rules, [`eslint-plugin-import`](https://github.com/import-js/eslint-plugin-import) for opinionated import sorting, [`eslint-plugin-unicorn`](https://github.com/sindresorhus/eslint-plugin-unicorn) to enforce good practices, and [`eslint-plugin-vitest`](https://github.com/veritem/eslint-plugin-vitest) to keep tests consistent.
    formatting: |-
      Uses [Prettier](https://prettier.io/) and a `.editorconfig` file.
    other: |-
      All of this is managed with [pnpm](https://pnpm.io/). Workflows for formatting, linting, testing, and releasing are in `.github/workflows/`.
  commands:
    format: pnpm format
    install: pnpm install

typescript-cli:
  description: A very opinionated TypeScript template for building CLI packages.
  setup:
    placeholder: package-name
    files:
      - README.md
      - package.json
      - src/bin.ts
  sections:
    building: |-
      Uses [unbuild](https://github.com/unjs/unbuild), which utilizes [rollup](https://rollupjs.org/) and [esbuild](https://github.com/evanw/esbuild) under the hood. Not the fastest option, but the only one so far that works out-of-the-box and is easy to configure.
    linting: |-
      Uses [ESLint](https://eslint.org/) with [typescript-eslint](https://typescript-eslint.io/), [`eslint-config-prettier`](https://github.com/prettier/eslint-config-prettier) to disable conflicting eslint style rules, [`eslint-plugin-import`](https://github.com/import-js/eslint-plugin-import) for opinionated import sorting, and [`eslint-plugin-unicorn`](https://github.com/sindresorhus/eslint-plugin-unicorn) to enforce good practices.
    formatting: |-
      Uses [Prettier](https://prettier.io/) and a `.editorconfig` file.
    other: |-
      All of this is managed with [pnpm](https://pnpm.io/). Workflows for formatting, linting, testing, and releasing are in `.github/workflows/`.
  commands:
    format: pnpm format
    install: pnpm install

commonjs-package:
  description: A ready-to-go CJS package template.
  note: Almost entirely the same as [typescript-package](#typescript-package), minus the build step and Typescript-related ESLint stuff.
  setup:
    placeholder: package-name
    files:
      - README.md
      - package.json
  sections:
    testing: |-
      Uses [Vitest](https://vitest.dev/) (in MJS files).
    linting: |-
      Uses [ESLint](https://eslint.org/) with [`eslint-config-prettier`](https://github.com/prettier/eslint-config-prettier) to disable conflicting eslint style rules, [`eslint-plugin-import`](https://github.com/import-js/eslint-plugin-import) for opinionated import sorting, [`eslint-plugin-unicorn`](https://github.com/sindresorhus/eslint-plugin-unicorn) to enforce good practices, and [`eslint-plugin-vitest`](https://github.com/veritem/eslint-plugin-vitest) to keep tests consistent.
    formatting: |-
      Uses [Prettier](https://prettier.io/) and a `.editorconfig` file.
    other: |-
      All of this is managed with [pnpm](https://pnpm.io/). Workflows for formatting, linting, testing, and releasing are in `.github/workflows/`.
  commands:
    format: pnpm format
    install: pnpm install

solidstart-app:
  description: A simple, bloat-free template for SolidStart/SolidJS with preconfigured formatting and linting.
  setup:
    placeholder: app-name
    files:
      - README.md
      - package.json
      - public/site.webmanifest
      - root.tsx
  sections:
    features: Includes TailwindCSS and has [shadcn-solid](https://shadcn-solid.vercel.app/docs/introduction) already intialized.
    linting: |-
      Uses [ESLint](https://eslint.org/) with [`eslint-config-prettier`](https://github.com/prettier/eslint-config-prettier) to disable conflicting eslint style rules, [`eslint-plugin-import`](https://github.com/import-js/eslint-plugin-import) for opinionated import sorting, [`eslint-plugin-unicorn`](https://github.com/sindresorhus/eslint-plugin-unicorn) to enforce good practices, and [`eslint-plugin-solid`](https://github.com/solidjs-community/eslint-plugin-solid) for Solid-specific linting.
    formatting: |-
      Uses [Prettier](https://prettier.io/) and a `.editorconfig` file.
    other: |-
      All of this is managed with [pnpm](https://pnpm.io/). Workflows for formatting and linting are in `.github/workflows/`.
  commands:
    format: pnpm format
    install: pnpm install
